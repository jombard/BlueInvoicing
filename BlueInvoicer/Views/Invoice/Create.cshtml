@model BlueInvoicer.ViewModels.InvoiceFormViewModel

@{
    ViewBag.Title = "Raise Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Raise Invoice</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Create", "Invoice"))
        {
        @Html.AntiForgeryToken()
            <div class="form-group">
                <p class="lead">@Model.Client.ClientName</p>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Contracts)
                @Html.DropDownListFor(m => m.Contracts, new SelectList(Model.Contracts, "Id", "Name"), "Select contract", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Contracts)
            </div>

            <div class="form-group">
                <div class="btn-group" data-toggle="buttons">
                    <label class="btn btn-default active">
                        <input type="radio" name="workType" id="chkWorkNormal" checked="checked" /> Normal Rate
                    </label>
                    <label class="btn btn-default">
                        <input type="radio" name="workType" id="chkWorkOvertime" /> Out of Hours Rate
                    </label>
                </div>
            </div>

            <div class="form-group js-work-normal">
                @Html.LabelFor(m => m.RateType)
                @Html.DropDownListFor(m => m.RateType, new SelectList(Model.RateType, "Id", "Rate"), "Select Rate Type", new { @class = "form-control" })
            </div>

            <div class="form-group js-work-normal">
                @Html.LabelFor(m => m.Rate)
                @Html.TextBoxFor(m => m.Rate, new {@class = "form-control"})
            </div>

            <div class="form-group js-work-overtime" style="display: none;">
                @Html.LabelFor(m => m.OvertimeRateType)
                @Html.DropDownListFor(m => m.OvertimeRateType, new SelectList(Model.OvertimeRateType, "Id", "Rate"), "Select Out of Hours Rate Type", new { @class = "form-control" })
            </div>

            <div class="form-group js-work-overtime" style="display: none;">
                @Html.LabelFor(m => m.OvertimeRate)
                @Html.TextBoxFor(m => m.OvertimeRate, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <label>Period of Work</label>
                <div class="date-pick"></div>
            </div>

            <!-- button to insert selected content into invoice, then clears inputs to allow for next -->
            <button type="button" class="js-sample-invoice-add btn btn-primary">Add to Invoice</button>

        }
    </div>
    <div class="col-md-6">
        <div class="js-sample-invoice table-responsive">
            <table class="table">
                <thead>
                <tr>
                    <th>Description</th>
                    <th>Rate</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th></th>
                </tr>
                </thead>
                <tr class="js-invoice-row">
                    <td class="js-invoice-desc"></td>
                    <td class="js-invoice-rate"></td>
                    <td class="js-invoice-quantity"></td>
                    <td class="js-invoice-total"></td>
                    <td class="js-invoice-del"></td>
                </tr>
            </table>

            <div>
                <hr/>
                <h3>Gross Total <strong>£<span class="js-invoice-gross">0.00</span></strong></h3>
                <hr />
            </div>
        </div>

        <!-- button to process invoice once inputted data is completed -->
        <button type="submit" class="btn btn-primary">Raise Invoice</button>

    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/datepicker")
    
    <script>
        $(document).ready(function () {
            InvoiceController.init();
        });
    </script>
}

@using PerpetuumSoft.Knockout
@model BlueInvoicer.ViewModels.InvoiceFormViewModel

@{
    var ko = Html.CreateKnockoutContext();
    ViewBag.Title = "Raise Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Raise Invoice</h2>

@*@using (var items = ko.Foreach(m => m.Gifts))
      {
        <tr>
          <td>Gift name:@items.Html.TextBox(item => item.Title, new { @class = "required" }).UniqueName()</td>
          <td>Price: $@items.Html.TextBox(item => item.Price, new { @class = "required number" }).UniqueName()</td>
          <td>@ko.Html.Button("Delete", "RemoveGift", "GiftList", new { index = items.GetIndex() })</td>
        </tr>
      }*@    


<div class="row">
    <div class="col-md-6">
        <form id="invoiceForm">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <p class="lead">@Model.Client.ClientName</p>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Contracts)
                @Html.DropDownListFor(m => m.Contracts, new SelectList(Model.Contracts, "Id", "Name"), "Select contract", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Contracts)
            </div>

            <div class="form-group">
                <div class="btn-group" data-toggle="buttons">
                    <label class="btn btn-default active">
                        <input type="radio" name="workType" id="chkWorkNormal" checked="checked" /> Normal Rate
                    </label>
                    <label class="btn btn-default">
                        <input type="radio" name="workType" id="chkWorkOvertime" /> Out of Hours Rate
                    </label>
                </div>
            </div>

            <div class="form-group js-work-normal">
                @Html.LabelFor(m => m.RateType)
                @Html.DropDownListFor(m => m.RateType, new SelectList(Model.RateType, "Id", "Rate"), "Select Rate Type", new { @class = "form-control" })
            </div>

            <div class="form-group js-work-normal">
                @Html.LabelFor(m => m.Rate)
                @Html.TextBoxFor(m => m.Rate, new { @class = "form-control" })
            </div>

            <div class="form-group js-work-overtime" style="display: none;">
                @Html.LabelFor(m => m.OvertimeRateType)
                @Html.DropDownListFor(m => m.OvertimeRateType, new SelectList(Model.OvertimeRateType, "Id", "Rate"), "Select Out of Hours Rate Type", new { @class = "form-control" })
            </div>

            <div class="form-group js-work-overtime" style="display: none;">
                @Html.LabelFor(m => m.OvertimeRate)
                @Html.TextBoxFor(m => m.OvertimeRate, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <label>Period of Work</label>
                <div class="date-pick"></div>
            </div>

            <!-- button to insert selected content into invoice, then clears inputs to allow for next -->
            @ko.Html.Button("Add to Invoice", "AddInvoiceEntry", "Invoice", null, new { @class = "btn btn-primary" })

        </form>
    </div>
    <div class="col-md-6">
        <div class="js-sample-invoice table-responsive">
            <table class="table">
                <thead>
                <tr>
                    <th>Description</th>
                    <th>Rate</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @using (var items = ko.Foreach(m => m.InvoiceEntries))
                {
                    <tr class="js-invoice-row">
                        <td>@items.Html.Span(i => i.Description)</td>
                        <td>@items.Html.Span(i => i.Rate)</td>
                        <td>@items.Html.Span(i => i.Quantity)</td>
                        <td>@items.Html.Span(i => i.Amount)</td>
                        <td>@ko.Html.Button("Delete", "RemoveInvoiceEntry", "Invoice", new { index = items.GetIndex() })</td>
                    </tr>
                }
                </tbody>
            </table>

            <div>
                <hr/>
                <h3>Gross Total <strong>£<span class="js-invoice-gross">0.00</span></strong></h3>
                <hr />
            </div>
        </div>

        <!-- button to process invoice once inputted data is completed -->
        <button type="submit" class="btn btn-primary">Raise Invoice</button>

    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datepicker")

    <script>
        $(document)
            .ready(function() {
                InvoiceController.init();
                $("#invoiceForm").ajaxForm();
                $("#invoiceForm").validate({ submitHandler: function() { @ko.ServerAction("Save", "InvoiceFormViewModel") }  });
            });
    </script>


    @ko.Apply(Model)
}